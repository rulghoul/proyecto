# Generated by Django 4.1.3 on 2023-02-17 23:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    replaces = [
        ("salones", "0001_initial"),
        ("salones", "0002_parametros_colores_parametros_imagenes_and_more"),
        ("salones", "0003_rename_folioevento_encevento_id_pk_and_more"),
        ("salones", "0004_remove_historicalenceventoopcion_history_user_and_more"),
        ("salones", "0005_detevento_opcion_historicaldetevento_opcion_and_more"),
        ("salones", "0006_alter_detevento_iddetalle_and_more"),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Foto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, default="", max_length=60)),
                (
                    "description",
                    models.TextField(blank=True, default="", max_length=200),
                ),
                ("width", models.IntegerField(default=0)),
                ("height", models.IntegerField(default=0)),
                (
                    "image",
                    models.ImageField(
                        height_field="height", upload_to="", width_field="width"
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Foto",
                "ordering": ["timestamp"],
            },
        ),
        migrations.CreateModel(
            name="TipoServicio",
            fields=[
                (
                    "id_pk",
                    models.SmallAutoField(
                        db_column="IdTipoServicio", primary_key=True, serialize=False
                    ),
                ),
                (
                    "clave",
                    models.CharField(
                        db_column="CveTipoServicio",
                        max_length=20,
                        unique=True,
                        verbose_name="Clave",
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(
                        db_column="DescServicio",
                        max_length=50,
                        verbose_name="Descripcion",
                    ),
                ),
                (
                    "bandactivo",
                    models.BooleanField(
                        db_column="BandActivo", default=True, verbose_name="Activo"
                    ),
                ),
            ],
            options={
                "db_table": "TIPO_SERVICIO",
            },
        ),
        migrations.CreateModel(
            name="ClasifServicio",
            fields=[
                (
                    "idclasifservicio",
                    models.SmallAutoField(
                        db_column="IdClasifServicio", primary_key=True, serialize=False
                    ),
                ),
                (
                    "cveclasifservicio",
                    models.CharField(db_column="CveClasifServicio", max_length=20),
                ),
                (
                    "descclasifservicio",
                    models.CharField(db_column="DescClasifServicio", max_length=50),
                ),
                (
                    "bandactivo",
                    models.BooleanField(
                        db_column="BandActivo", default=True, verbose_name="Activo"
                    ),
                ),
                (
                    "cvetiposervicio",
                    models.ForeignKey(
                        db_column="CveTipoServicio",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="salones.tiposervicio",
                    ),
                ),
            ],
            options={
                "db_table": "clasif_servicio",
            },
        ),
        migrations.CreateModel(
            name="DesgloseServicio",
            fields=[
                (
                    "iddesgloseservicio",
                    models.SmallAutoField(
                        db_column="IdDesgloseServicio",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cvedesgloseservicio",
                    models.CharField(db_column="CveDesgloseServicio", max_length=20),
                ),
                (
                    "descdesgloseservicio",
                    models.CharField(db_column="DescDesgloseServicio", max_length=50),
                ),
                (
                    "bandactivo",
                    models.BooleanField(
                        db_column="BandActivo", default=True, verbose_name="Activo"
                    ),
                ),
                ("datelastupdate", models.DateTimeField(db_column="DateLastUpdate")),
                (
                    "cveclasifservicio",
                    models.ForeignKey(
                        db_column="CveClasifServicio",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="salones.clasifservicio",
                    ),
                ),
            ],
            options={
                "db_table": "desglose_servicio",
            },
        ),
        migrations.CreateModel(
            name="DetEvento",
            fields=[
                (
                    "iddetalle",
                    models.PositiveSmallIntegerField(
                        db_column="IdDetalle", primary_key=True, serialize=False
                    ),
                ),
                ("costo", models.FloatField(blank=True, db_column="Costo", null=True)),
                (
                    "fecha",
                    models.DateTimeField(blank=True, db_column="Fecha", null=True),
                ),
                (
                    "cveclasifservicio",
                    models.ForeignKey(
                        db_column="CveClasifServicio",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="salones.clasifservicio",
                    ),
                ),
                (
                    "cvedesgloseservicio",
                    models.ForeignKey(
                        db_column="CveDesgloseServicio",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="salones.desgloseservicio",
                    ),
                ),
            ],
            options={
                "db_table": "det_evento",
            },
        ),
        migrations.CreateModel(
            name="EncEvento",
            fields=[
                (
                    "folioevento",
                    models.PositiveSmallIntegerField(
                        db_column="FolioEvento", primary_key=True, serialize=False
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        blank=True, db_column="Nombre", max_length=50, null=True
                    ),
                ),
                (
                    "banaprovada",
                    models.PositiveIntegerField(
                        db_column="BanAprovada", default=True, verbose_name="Aprobada"
                    ),
                ),
            ],
            options={
                "db_table": "enc_evento",
            },
        ),
        migrations.CreateModel(
            name="PersonaPrincipal",
            fields=[
                (
                    "idpersonaprincipal",
                    models.SmallAutoField(
                        db_column="IdPersonaPrincipal",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cvetipopersona",
                    models.PositiveSmallIntegerField(db_column="CveTipoPersona"),
                ),
                ("nombre", models.CharField(db_column="Nombre", max_length=100)),
                (
                    "primer_apellido",
                    models.CharField(
                        blank=True,
                        db_column="Primer_Apellido",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "segundo_apellido",
                    models.CharField(
                        blank=True,
                        db_column="Segundo_Apellido",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("correo", models.EmailField(db_column="Correo", max_length=70)),
                ("telefono1", models.CharField(db_column="Telefono1", max_length=50)),
                (
                    "telefono2",
                    models.CharField(
                        blank=True, db_column="Telefono2", max_length=50, null=True
                    ),
                ),
                (
                    "datestar",
                    models.DateTimeField(auto_now_add=True, db_column="DateStar"),
                ),
                (
                    "bandactivo",
                    models.BooleanField(
                        db_column="BandActivo", default=True, verbose_name="Activo"
                    ),
                ),
            ],
            options={
                "db_table": "persona_principal",
            },
        ),
        migrations.CreateModel(
            name="Procesos",
            fields=[
                (
                    "id_pk",
                    models.SmallAutoField(
                        db_column="IdProceso", primary_key=True, serialize=False
                    ),
                ),
                (
                    "clave",
                    models.CharField(
                        db_column="CveProceso", max_length=20, unique=True
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(
                        db_column="DescProceso", max_length=50, unique=True
                    ),
                ),
                (
                    "bandactivo",
                    models.BooleanField(
                        db_column="BandActivo", default=True, verbose_name="Activo"
                    ),
                ),
            ],
            options={
                "db_table": "procesos",
            },
        ),
        migrations.CreateModel(
            name="SeguimientoEvento",
            fields=[
                (
                    "folioevento",
                    models.PositiveSmallIntegerField(
                        db_column="FolioEvento", primary_key=True, serialize=False
                    ),
                ),
                (
                    "cvetipopersona",
                    models.CharField(db_column="CveTipoPersona", max_length=20),
                ),
                ("cvepersona", models.CharField(db_column="CvePersona", max_length=20)),
                (
                    "cvetipoevento",
                    models.CharField(db_column="CveTipoEvento", max_length=20),
                ),
                ("cveproceso", models.CharField(db_column="CveProceso", max_length=20)),
                ("cvefase", models.CharField(db_column="CveFase", max_length=20)),
            ],
            options={
                "db_table": "SEGUIMIENTO_EVENTO",
            },
        ),
        migrations.CreateModel(
            name="TipoActividad",
            fields=[
                (
                    "id_pk",
                    models.SmallAutoField(
                        db_column="IdTipoActividad", primary_key=True, serialize=False
                    ),
                ),
                (
                    "clave",
                    models.CharField(db_column="CveTipoActividad", max_length=20),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="DescTipoActividad", max_length=50),
                ),
                (
                    "bandactivo",
                    models.BooleanField(
                        db_column="BandActivo", default=True, verbose_name="Activo"
                    ),
                ),
            ],
            options={
                "db_table": "TIPO_ACTIVIDAD",
            },
        ),
        migrations.CreateModel(
            name="TipoEvento",
            fields=[
                (
                    "id_pk",
                    models.SmallAutoField(
                        db_column="IdTipoEvento", primary_key=True, serialize=False
                    ),
                ),
                (
                    "clave",
                    models.CharField(
                        db_column="CveTipoEvento", max_length=20, unique=True
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="DescTipoEvento", max_length=50),
                ),
                (
                    "bandactivo",
                    models.BooleanField(
                        db_column="BandActivo", default=True, verbose_name="Activo"
                    ),
                ),
            ],
            options={
                "db_table": "TIPO_EVENTO",
            },
        ),
        migrations.CreateModel(
            name="Ingresos",
            fields=[
                (
                    "idingresos",
                    models.OneToOneField(
                        db_column="IdIngresos",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="salones.encevento",
                    ),
                ),
                ("cveevento", models.PositiveSmallIntegerField(db_column="CveEvento")),
                ("monto", models.FloatField(db_column="Monto")),
                (
                    "spei",
                    models.CharField(
                        blank=True, db_column="SPEI", max_length=50, null=True
                    ),
                ),
            ],
            options={
                "db_table": "ingresos",
            },
        ),
        migrations.CreateModel(
            name="HistoricalSeguimientoEvento",
            fields=[
                (
                    "folioevento",
                    models.PositiveSmallIntegerField(
                        db_column="FolioEvento", db_index=True
                    ),
                ),
                (
                    "cvetipopersona",
                    models.CharField(db_column="CveTipoPersona", max_length=20),
                ),
                ("cvepersona", models.CharField(db_column="CvePersona", max_length=20)),
                (
                    "cvetipoevento",
                    models.CharField(db_column="CveTipoEvento", max_length=20),
                ),
                ("cveproceso", models.CharField(db_column="CveProceso", max_length=20)),
                ("cvefase", models.CharField(db_column="CveFase", max_length=20)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical seguimiento evento",
                "verbose_name_plural": "historical seguimiento eventos",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIngresos",
            fields=[
                ("cveevento", models.PositiveSmallIntegerField(db_column="CveEvento")),
                ("monto", models.FloatField(db_column="Monto")),
                (
                    "spei",
                    models.CharField(
                        blank=True, db_column="SPEI", max_length=50, null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "idingresos",
                    models.ForeignKey(
                        blank=True,
                        db_column="IdIngresos",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="salones.encevento",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ingresos",
                "verbose_name_plural": "historical ingresoss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalEgresos",
            fields=[
                ("id_egresos", models.IntegerField(blank=True, db_index=True)),
                ("monto", models.FloatField(db_column="Monto")),
                ("spei", models.CharField(db_column="SPEI", max_length=50)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "cve_detalle",
                    models.ForeignKey(
                        blank=True,
                        db_column="Cve_detalle",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="salones.detevento",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical egresos",
                "verbose_name_plural": "historical egresoss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name="encevento",
            name="cvepersona",
            field=models.ForeignKey(
                db_column="CvePersona",
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="salones.personaprincipal",
            ),
        ),
        migrations.AddField(
            model_name="encevento",
            name="cvetipoevento",
            field=models.ForeignKey(
                db_column="CveTipoEvento",
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="salones.tipoevento",
                verbose_name="Tipo de evento",
            ),
        ),
        migrations.CreateModel(
            name="Egresos",
            fields=[
                (
                    "id_egresos",
                    models.SmallAutoField(primary_key=True, serialize=False),
                ),
                ("monto", models.FloatField(db_column="Monto")),
                ("spei", models.CharField(db_column="SPEI", max_length=50)),
                (
                    "cve_detalle",
                    models.ForeignKey(
                        db_column="Cve_detalle",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="salones.detevento",
                    ),
                ),
            ],
            options={
                "db_table": "egresos",
            },
        ),
        migrations.AddField(
            model_name="detevento",
            name="cvetipoactividad",
            field=models.ForeignKey(
                db_column="CveTipoActividad",
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="salones.tipoactividad",
                verbose_name="Actividad",
            ),
        ),
        migrations.AddField(
            model_name="detevento",
            name="cvetiposervicio",
            field=models.ForeignKey(
                db_column="CveTipoServicio",
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="salones.tiposervicio",
                verbose_name="Servicio",
            ),
        ),
        migrations.AlterField(
            model_name="encevento",
            name="banaprovada",
            field=models.BooleanField(
                db_column="BanAprovada", default=True, verbose_name="Aprobada"
            ),
        ),
        migrations.CreateModel(
            name="EstatusActividad",
            fields=[
                (
                    "idestatusactividad",
                    models.SmallAutoField(
                        db_column="IdEstatusActividad",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "clave",
                    models.CharField(
                        db_column="CveEstatusActividad", max_length=20, unique=True
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(
                        db_column="DescEstatusActividad", max_length=50, unique=True
                    ),
                ),
                (
                    "bandactivo",
                    models.BooleanField(
                        db_column="BandActivo", default=True, verbose_name="Activo"
                    ),
                ),
            ],
            options={
                "db_table": "estatus_actividad",
            },
        ),
        migrations.CreateModel(
            name="FasesProcesos",
            fields=[
                (
                    "idfase",
                    models.SmallAutoField(
                        db_column="IdFase", primary_key=True, serialize=False
                    ),
                ),
                (
                    "cvefase",
                    models.CharField(db_column="CveFase", max_length=20, unique=True),
                ),
                (
                    "descfase",
                    models.CharField(db_column="DescFase", max_length=50, unique=True),
                ),
                (
                    "bandactivo",
                    models.BooleanField(
                        db_column="BandActivo", default=True, verbose_name="Activo"
                    ),
                ),
            ],
            options={
                "db_table": "fases_procesos",
            },
        ),
        migrations.CreateModel(
            name="TipoPersona",
            fields=[
                (
                    "id_pk",
                    models.SmallAutoField(
                        db_column="IdTipoPersona", primary_key=True, serialize=False
                    ),
                ),
                (
                    "clave",
                    models.CharField(
                        db_column="CveTipoPersona",
                        max_length=20,
                        unique=True,
                        verbose_name="Clave",
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(
                        db_column="DescTipoPersona",
                        max_length=50,
                        unique=True,
                        verbose_name="Descripcion",
                    ),
                ),
                (
                    "bandactivo",
                    models.BooleanField(
                        db_column="BandActivo", default=True, verbose_name="Activo"
                    ),
                ),
            ],
            options={
                "db_table": "TIPO_PERSONA",
            },
        ),
        migrations.AlterField(
            model_name="encevento",
            name="folioevento",
            field=models.SmallAutoField(
                db_column="FolioEvento", primary_key=True, serialize=False
            ),
        ),
        migrations.AlterField(
            model_name="personaprincipal",
            name="cvetipopersona",
            field=models.ForeignKey(
                db_column="CveTipoPersona",
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="salones.tipopersona",
            ),
        ),
        migrations.AddField(
            model_name="detevento",
            name="tiempo",
            field=models.PositiveSmallIntegerField(
                db_column="Tiempo", default=None, null=True, verbose_name="Tiempo"
            ),
        ),
        migrations.AddField(
            model_name="detevento",
            name="estatus",
            field=models.ForeignKey(
                db_column="CveEstatus",
                default=None,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="salones.estatusactividad",
                verbose_name="Estatus",
            ),
        ),
        migrations.AddField(
            model_name="detevento",
            name="nota",
            field=models.CharField(
                db_column="Notas",
                default=None,
                max_length=100,
                null=True,
                verbose_name="Notas",
            ),
        ),
        migrations.CreateModel(
            name="parametros_colores",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("elemento", models.CharField(db_column="elemento", max_length=50)),
                ("color", models.CharField(db_column="color", max_length=9)),
            ],
            options={
                "db_table": "parametros_colores",
            },
        ),
        migrations.CreateModel(
            name="parametros_imagenes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, default="", max_length=60)),
                (
                    "description",
                    models.TextField(blank=True, default="", max_length=200),
                ),
                ("width", models.IntegerField(default=0)),
                ("height", models.IntegerField(default=0)),
                (
                    "image",
                    models.ImageField(
                        height_field="height", upload_to="", width_field="width"
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name="encevento",
            name="opcion",
            field=models.PositiveSmallIntegerField(
                choices=[(1, "1"), (2, "2"), (3, "3")],
                db_column="Opcion",
                default=1,
                verbose_name="Opcion",
            ),
        ),
        migrations.RenameField(
            model_name="encevento",
            old_name="folioevento",
            new_name="id_pk",
        ),
        migrations.AddField(
            model_name="detevento",
            name="cveevento",
            field=models.ForeignKey(
                db_column="CveEvento",
                default=None,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="salones.encevento",
            ),
        ),
        migrations.AddField(
            model_name="encevento",
            name="numeropersonas",
            field=models.PositiveSmallIntegerField(
                db_column="numero_personas",
                default=0,
                null=True,
                verbose_name="Numero de personas",
            ),
        ),
        migrations.AddField(
            model_name="detevento",
            name="opcion",
            field=models.PositiveSmallIntegerField(
                choices=[(1, "1"), (2, "2"), (3, "3")],
                db_column="Opcion",
                default=1,
                verbose_name="Opcion",
            ),
        ),
        migrations.AlterField(
            model_name="detevento",
            name="costo",
            field=models.FloatField(
                blank=True, db_column="Costo", null=True, verbose_name="Costo"
            ),
        ),
        migrations.AlterField(
            model_name="detevento",
            name="cveclasifservicio",
            field=models.ForeignKey(
                db_column="CveClasifServicio",
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="salones.clasifservicio",
                verbose_name="Clasificacion",
            ),
        ),
        migrations.AlterField(
            model_name="detevento",
            name="cvedesgloseservicio",
            field=models.ForeignKey(
                db_column="CveDesgloseServicio",
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="salones.desgloseservicio",
                verbose_name="Desglose",
            ),
        ),
        migrations.AlterField(
            model_name="detevento",
            name="fecha",
            field=models.DateTimeField(
                blank=True, db_column="Fecha", null=True, verbose_name="Fecha"
            ),
        ),
        migrations.AlterField(
            model_name="encevento",
            name="cvepersona",
            field=models.ForeignKey(
                db_column="CvePersona",
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="salones.personaprincipal",
                verbose_name="Persona",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalEncEvento",
            fields=[
                (
                    "id_pk",
                    models.IntegerField(
                        blank=True, db_column="FolioEvento", db_index=True
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        blank=True, db_column="Nombre", max_length=50, null=True
                    ),
                ),
                (
                    "banaprovada",
                    models.BooleanField(
                        db_column="BanAprovada", default=True, verbose_name="Aprobada"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "cvepersona",
                    models.ForeignKey(
                        blank=True,
                        db_column="CvePersona",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="salones.personaprincipal",
                        verbose_name="Persona",
                    ),
                ),
                (
                    "cvetipoevento",
                    models.ForeignKey(
                        blank=True,
                        db_column="CveTipoEvento",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="salones.tipoevento",
                        verbose_name="Tipo de evento",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "opcion",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3")],
                        db_column="Opcion",
                        default=1,
                        verbose_name="Opcion",
                    ),
                ),
                (
                    "numeropersonas",
                    models.PositiveSmallIntegerField(
                        db_column="numero_personas",
                        default=0,
                        null=True,
                        verbose_name="Numero de personas",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical enc evento",
                "verbose_name_plural": "historical enc eventos",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AlterField(
            model_name="detevento",
            name="iddetalle",
            field=models.SmallAutoField(
                db_column="IdDetalle", primary_key=True, serialize=False
            ),
        ),
        migrations.CreateModel(
            name="HistoricalDetEvento",
            fields=[
                (
                    "iddetalle",
                    models.IntegerField(
                        blank=True, db_column="IdDetalle", db_index=True
                    ),
                ),
                (
                    "costo",
                    models.FloatField(
                        blank=True, db_column="Costo", null=True, verbose_name="Costo"
                    ),
                ),
                (
                    "fecha",
                    models.DateTimeField(
                        blank=True, db_column="Fecha", null=True, verbose_name="Fecha"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "cveclasifservicio",
                    models.ForeignKey(
                        blank=True,
                        db_column="CveClasifServicio",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="salones.clasifservicio",
                        verbose_name="Clasificacion",
                    ),
                ),
                (
                    "cvedesgloseservicio",
                    models.ForeignKey(
                        blank=True,
                        db_column="CveDesgloseServicio",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="salones.desgloseservicio",
                        verbose_name="Desglose",
                    ),
                ),
                (
                    "cvetipoactividad",
                    models.ForeignKey(
                        blank=True,
                        db_column="CveTipoActividad",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="salones.tipoactividad",
                        verbose_name="Actividad",
                    ),
                ),
                (
                    "cvetiposervicio",
                    models.ForeignKey(
                        blank=True,
                        db_column="CveTipoServicio",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="salones.tiposervicio",
                        verbose_name="Servicio",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tiempo",
                    models.PositiveSmallIntegerField(
                        db_column="Tiempo",
                        default=None,
                        null=True,
                        verbose_name="Tiempo",
                    ),
                ),
                (
                    "estatus",
                    models.ForeignKey(
                        blank=True,
                        db_column="CveEstatus",
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="salones.estatusactividad",
                        verbose_name="Estatus",
                    ),
                ),
                (
                    "nota",
                    models.CharField(
                        db_column="Notas",
                        default=None,
                        max_length=100,
                        null=True,
                        verbose_name="Notas",
                    ),
                ),
                (
                    "cveevento",
                    models.ForeignKey(
                        blank=True,
                        db_column="CveEvento",
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="salones.encevento",
                    ),
                ),
                (
                    "opcion",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3")],
                        db_column="Opcion",
                        default=1,
                        verbose_name="Opcion",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical det evento",
                "verbose_name_plural": "historical det eventos",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
